{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"\u00bfQu\u00e9 es el pensamiento computacional?","text":"<p>El pensamiento computacional es un enfoque de resoluci\u00f3n de problemas que utiliza conceptos y principios de la inform\u00e1tica. Es una habilidad clave que no solo se aplica al desarrollo de software o a la programaci\u00f3n, sino que puede usarse para abordar y resolver problemas complejos en diversas \u00e1reas de una forma estructurada y eficiente.</p> <p>Wing acu\u00f1\u00f3 el concepto en 2006 como \"aplicar procesos de pensamiento l\u00f3gico, sist\u00e9mico, algor\u00edtmico\u2026 para lograr representar las soluciones a un problema como secuencias de instrucciones y algoritmos\".</p> <p>El pensamiento computacional es \"el proceso de pensamiento que interviene en la formulaci\u00f3n de los problemas y sus soluciones, de manera que las soluciones se representen de forma que pueda ser realizada por un procesador de informaci\u00f3n\" (Cuny, Snyder y Wing, 2010).</p> <p>Otra definici\u00f3n ampliamente aceptada de pensamiento computacional afirma que es un \"proceso por el cual se reconocen aspectos de la inform\u00e1tica en el mundo que nos rodea y aplicar herramientas y t\u00e9cnicas de la inform\u00e1tica para comprender sistemas y procesos naturales y artificiales\" (Royal Society, 2012).</p> <p>Seymour Papert (1980s)</p> <p>Aunque Papert no us\u00f3 el t\u00e9rmino \"pensamiento computacional\", su trabajo sobre el uso del computador en la educaci\u00f3n influy\u00f3 fuertemente en este concepto. Papert desarroll\u00f3 el lenguaje de programaci\u00f3n Logo para ense\u00f1ar a los ni\u00f1os a programar y resolver problemas. Argumentaba que aprender a programar les permite a los estudiantes desarrollar habilidades de resoluci\u00f3n de problemas de manera creativa.</p> <p></p>"},{"location":"index.html#claves-del-pensamiento-computacional","title":"Claves del pensamiento computacional","text":"<ol> <li> <p>Descomposici\u00f3n: Consiste en dividir un problema complejo en partes m\u00e1s peque\u00f1as y manejables.Es importante ya que facilita el an\u00e1lisis y la comprensi\u00f3n del problema, permitiendo abordar cada parte por separado y buscar soluciones para cada una de ellas. Por ejemplo, al construir un robot, se pueden dividir las tareas en dise\u00f1o mec\u00e1nico, programaci\u00f3n de los movimientos, sensores, etc.</p> </li> <li> <p>Reconocimiento de patrones: Implica identificar similitudes o elementos comunes entre diferentes problemas o situaciones. Al reconocer patrones, se pueden reutilizar soluciones que ya han funcionado en situaciones similares, lo que ahorra tiempo y esfuerzo. En historia, por ejemplo, pueden analizar patrones de eventos hist\u00f3ricos que conducen a revoluciones o guerras.</p> </li> <li> <p>Abstracci\u00f3n: Es el proceso de enfocarse en la informaci\u00f3n relevante y eliminar los detalles no esenciales. Facilita la resoluci\u00f3n de problemas complejos al centrarse en los elementos clave. La abstracci\u00f3n es fundamental para dise\u00f1ar modelos y simplificar problemas, permitiendo que se resuelvan de manera m\u00e1s r\u00e1pida y eficiente.</p> </li> <li> <p>Algoritmos: Un algoritmo es un conjunto de pasos o instrucciones bien definidas para resolver un problema. Los algoritmos son esenciales en el pensamiento computacional porque proporcionan un enfoque sistem\u00e1tico para la resoluci\u00f3n de problemas. Estos permiten encontrar soluciones paso a paso y pueden ser aplicados tanto en problemas de programaci\u00f3n como en situaciones cotidianas, como seguir una receta o una rutina de ejercicio.En educaci\u00f3n f\u00edsica, pueden crear una secuencia de pasos para realizar una rutina de ejercicio o una estrategia en un juego.</p> </li> <li> <p>Evaluaci\u00f3n y depuraci\u00f3n: Implica revisar, probar y mejorar soluciones o algoritmos para asegurarse de que funcionen de manera \u00f3ptima. A trav\u00e9s de la evaluaci\u00f3n, se identifican errores o ineficiencias en la soluci\u00f3n. La depuraci\u00f3n es el proceso de corregir esos errores para mejorar la eficacia y la precisi\u00f3n. Este paso es fundamental para garantizar que la soluci\u00f3n es adecuada y efectiva.</p> </li> <li> <p>Generalizaci\u00f3n: Se refiere a la capacidad de aplicar una soluci\u00f3n a problemas similares o relacionados. La generalizaci\u00f3n permite que una soluci\u00f3n no solo funcione para un problema espec\u00edfico, sino que se extienda a otros problemas que comparten caracter\u00edsticas similares. Esto maximiza la eficiencia del esfuerzo aplicado en la resoluci\u00f3n de problemas.</p> </li> <li> <p>Pensamiento l\u00f3gico: Es la capacidad de razonar y tomar decisiones basadas en hechos y reglas claras. El pensamiento l\u00f3gico es esencial para tomar decisiones informadas y coherentes en cada paso del proceso de resoluci\u00f3n de problemas. Es la base que sustenta todas las dem\u00e1s habilidades del pensamiento computacional, asegurando que las soluciones sean l\u00f3gicas y racionales.</p> </li> <li> <p>Iteraci\u00f3n: Se refiere al proceso de repetir un conjunto de pasos hasta que se logre el resultado deseado. La iteraci\u00f3n permite mejorar y refinar soluciones de manera continua. En inform\u00e1tica, la iteraci\u00f3n es clave en la creaci\u00f3n de programas o algoritmos que necesitan ser probados y ajustados constantemente.</p> </li> <li> <p>Simulaci\u00f3n y modelado:Crear modelos o simulaciones que representen sistemas reales o hipot\u00e9tios. En geograf\u00eda, los estudiantes pueden usar software para simular fen\u00f3menos naturales como terremotos o erupciones volc\u00e1nicas.</p> </li> <li> <p>Uso de la programaci\u00f3n: Programar no solo mejora habilidades t\u00e9cnicas, sino que fomenta la resoluci\u00f3n de problemas de manera estructurada. En clases de inform\u00e1tica, los alumnos aprenden a programar con herramientas como Scratch.</p> </li> </ol> <p></p>"},{"location":"index.html#beneficios-del-pensamiento-computacional-en-el-aula","title":"Beneficios del Pensamiento Computacional en el Aula","text":"<ul> <li> <p>Mejora de habilidades de resoluci\u00f3n de problemas: Al enfrentar a los estudiantes con problemas que deben descomponer y analizar.</p> </li> <li> <p>Fomento del pensamiento cr\u00edtico y creativo: Los alumnos aprenden a ver problemas desde m\u00faltiples perspectivas y a crear soluciones innovadoras.</p> </li> <li> <p>Preparaci\u00f3n para el futuro: El pensamiento computacional es una habilidad esencial en muchas carreras tecnol\u00f3gicas.</p> </li> <li> <p>Interdisciplinariedad: Puede aplicarse en m\u00faltiples materias, no solo en ciencias o tecnolog\u00eda.</p> </li> </ul>"},{"location":"index.html#analisis-de-un-texto-narrativo-usando-pensamiento-computacional","title":"An\u00e1lisis de un texto narrativo usando pensamiento computacional","text":"<p>Los alumnos/as deber\u00e1n analizar un texto narrativo corto, identificando los elementos clave como personajes, trama, conflicto y resoluci\u00f3n. Usar\u00e1n los pasos del pensamiento computacional para descomponer el texto, reconocer patrones narrativos comunes, abstraer informaci\u00f3n importante y desarrollar un esquema para analizar futuros textos.</p> <p>1. Plantear el problema (Descomposici\u00f3n):</p> <p>El profesor selecciona un cuento corto o fragmento literario que los estudiantes deben analizar. Gu\u00eda a los estudiantes para descomponer el an\u00e1lisis del texto en partes m\u00e1s peque\u00f1as. Esto puede incluir la identificaci\u00f3n de los personajes, el contexto, la trama, el conflicto, el cl\u00edmax y la resoluci\u00f3n.</p> <p>Ejemplo de preguntas a plantear:</p> <pre><code>\u00bfCu\u00e1les son los personajes principales y secundarios?\n\n\u00bfQu\u00e9 acciones componen la trama del texto?\n\n\u00bfD\u00f3nde se desarrolla la historia y en qu\u00e9 \u00e9poca?\n</code></pre> <p>2. Identificar patrones (Reconocimiento de patrones):</p> <p>Despu\u00e9s de descomponer el texto, los alumnos/as deben identificar patrones narrativos que se repiten en muchas historias, como el esquema b\u00e1sico de introducci\u00f3n, desarrollo, cl\u00edmax y desenlace. El profesor puede guiar a los alumnos para que reconozcan si el texto sigue un patr\u00f3n narrativo cl\u00e1sico, como la estructura de los cuentos tradicionales.</p> <p>Ejemplo de preguntas a plantear:</p> <pre><code>\u00bfSigue el texto una estructura narrativa conocida?\n\n\u00bfHay patrones comunes en la forma en que los personajes enfrentan el conflicto?\n\n\u00bfC\u00f3mo se resuelven los problemas en otras historias que ya hemos le\u00eddo?\n</code></pre> <p>3. Abstracci\u00f3n:</p> <p>En esta etapa, los alumnos/as deben centrarse en lo esencial del texto, dejando de lado detalles secundarios para abstraer la estructura principal y los elementos clave de la narraci\u00f3n. Por ejemplo, los estudiantes deben identificar el tema central de la historia y c\u00f3mo los personajes principales lo desarrollan, ignorando descripciones o di\u00e1logos menos relevantes.</p> <p>Ejemplo de preguntas a plantear:</p> <pre><code>\u00bfCu\u00e1l es el tema principal de la historia?\n\n\u00bfQu\u00e9 informaci\u00f3n es crucial para entender la trama?\n\n\u00bfQu\u00e9 podemos eliminar sin perder el sentido del texto?\n</code></pre> <p>4. Crear un algoritmo:</p> <p>Ahora, los alumnos/as deben crear un algoritmo o conjunto de pasos para analizar futuros textos de forma similar. Este puede ser un esquema que sigan siempre que analicen una narraci\u00f3n.</p> <p>El esquema podr\u00eda ser algo como:</p> <p>Algoritmo para analizar un texto narrativo:</p> <ul> <li> <p>Leer el texto y hacer una primera identificaci\u00f3n de personajes, trama y escenario.</p> </li> <li> <p>Dividir el texto en introducci\u00f3n, desarrollo, cl\u00edmax y desenlace.</p> </li> <li> <p>Identificar el conflicto principal que enfrentan los personajes.</p> </li> <li> <p>Determinar el tema central del texto.</p> </li> <li> <p>Resumir la resoluci\u00f3n del conflicto y la conclusi\u00f3n de la historia.</p> </li> </ul> <p>Ejemplo de preguntas a plantear:</p> <pre><code>\u00bfPodemos crear una lista de pasos para analizar cualquier texto narrativo?\n\n\u00bfCu\u00e1les son los elementos clave que siempre debemos buscar?\n\n\u00bfC\u00f3mo podemos organizar nuestro an\u00e1lisis para que sea claro y estructurado?\n</code></pre> <p>5. Evaluaci\u00f3n y verificaci\u00f3n (Evaluaci\u00f3n y Depuraci\u00f3n):</p> <p>Finalmente, el profesor debe pedir a los alumnos/as que eval\u00faen su an\u00e1lisis revisando si han capturado todos los elementos clave del texto. Se debe comparar su an\u00e1lisis con otras historias para verificar si el esquema que han desarrollado funciona con diferentes textos.</p> <p>Ejemplo de preguntas a plantear:</p> <pre><code>\u00bfNuestro an\u00e1lisis abarca todos los elementos importantes del texto?\n\n\u00bfHay algo que hayamos pasado por alto o que deber\u00edamos agregar a nuestro esquema?\n\n\u00bfPodemos aplicar nuestro algoritmo a otro texto y obtener resultados similares?\n</code></pre>"},{"location":"index2.html","title":"Acci\u00f3n con programaci\u00f3n","text":""},{"location":"index2.html#algoritmos-y-pseudocodigo","title":"Algoritmos y pseudoc\u00f3digo","text":"<p>Un algoritmo es un conjunto ordenado de pasos a seguir (instrucciones concretas) que llevan a resolver un determinado problema.</p> <p>Los algoritmos se pueden aplicar en cualquier \u00e1rea, no solo en la programaci\u00f3n. Por ejemplo, una receta de cocina o una lista de pasos para armar un mueble son formas de algoritmos en la vida diaria.</p> <p></p> <p>Caracter\u00edsticas de un algoritmo:</p> <ul> <li> <p>Ser correcto (Resuelve el problema).</p> </li> <li> <p>Ser finito (Conduce a la soluci\u00f3n en un tiempo dado).</p> </li> <li> <p>Ser flexible  (No es exclusivo para un tipo de problema sino que sirve como m\u00e9todo general para distintos datos).</p> </li> <li> <p>Ser claro (comprensible por otras personas).</p> </li> <li> <p>Ser eficiente (ahorro de tiempo y recursos).</p> </li> <li> <p>Ser portable (independiente de la m\u00e1quina o del lenguaje utilizado).  </p> </li> </ul> <p>El pseudoc\u00f3digo es una forma de representar un algoritmo utilizando una mezcla de lenguaje natural (el idioma que usamos a diario, como espa\u00f1ol,ingl\u00e9s o valenciano) y elementos propios de la programaci\u00f3n, pero sin seguir las reglas estrictas de un lenguaje de programaci\u00f3n real. Sirve para describir los pasos del algoritmo de forma sencilla y entendible, sin preocuparse por la sintaxis espec\u00edfica de un lenguaje de programaci\u00f3n.</p> <p>No existe una sintaxis est\u00e1ndar para el pseudoc\u00f3digo.</p> <p>Instrucciones condicionales:</p> <p></p> <p>Instrucciones repetitivas:</p> <p></p> <p></p>"},{"location":"index2.html#ejemplo-de-un-algoritmo","title":"Ejemplo de un algoritmo","text":"<p>Queremos hacer un programa que pida un n\u00famero al usuario y muestre la tabla de multiplicar de ese n\u00famero.</p> <p></p> <p>Utilizando el lenguaje de programaci\u00f3n de scratch ser\u00eda:</p> <p></p>"},{"location":"index3.html","title":"Herramientas para el Pensamiento Computacional","text":""},{"location":"index3.html#la-hora-del-codigo","title":"La hora del c\u00f3digo","text":"<p>Es una iniciativa global que busca introducir a personas de todas las edades, especialmente estudiantes, en el mundo de la programaci\u00f3n y el pensamiento computacional.</p> <p>enlace la hora del c\u00f3digo</p> <p>Caracter\u00edsticas de la Hora del C\u00f3digo:</p> <ul> <li> <p>Gratuita y accesible: Est\u00e1 dise\u00f1ada para que cualquier persona, sin importar el acceso a recursos, pueda participar. Solo se necesita un ordenador o dispositivo m\u00f3vil con conexi\u00f3n a internet.</p> </li> <li> <p>Actividades variadas: Los tutoriales y juegos son interactivos, y muchos incluyen personajes populares de videojuegos o pel\u00edculas, como Minecraft, Star Wars o Frozen, lo que hace que el aprendizaje sea divertido.</p> </li> <li> <p>Dirigido a todos: Est\u00e1 abierta a estudiantes de todas las edades, desde educaci\u00f3n infantil hasta adultos, y no requiere experiencia previa en programaci\u00f3n.</p> </li> </ul>"},{"location":"index3.html#blockly","title":"Blockly","text":"<p>enlace a Blockly</p> <p>Es una aplicaci\u00f3n similar a Scratch. Blockly es una herramienta de programaci\u00f3n visual basada en bloques, que puede conectarse con lenguajes de programaci\u00f3n reales como JavaScript, Python y Dart.</p> <p>Proporciona una transici\u00f3n suave del pensamiento l\u00f3gico al c\u00f3digo escrito. Es personalizable para diferentes niveles de complejidad.</p>"},{"location":"index3.html#scratch","title":"Scratch","text":"<p>Es una de las aplicaciones m\u00e1s extendidas en el mundo para trabajar el Pensamiento Computacional. Desarrollado por el Instituto de Tecnolog\u00eda de Massachusetts (MIT), su entorno permite introducirse en el mundo de la programaci\u00f3n sin conocimientos complejos sobre c\u00f3digo.</p> <p>Scratch es un entorno de programaci\u00f3n por bloques, con una interfaz sencilla, que permite crear historias digitales, juegos y animaciones y otros proyectos a personas de todas las edades, pero que fue pensado teniendo en cuenta principalmente a ni\u00f1os y ni\u00f1as.</p> <p>Scratch promueve el pensamiento computacional y las habilidades en resoluci\u00f3n de problemas, la ense\u00f1anza y aprendizaje creativos, auto expresi\u00f3n y colaboraci\u00f3n, igualdad... </p> <p>Se pueden incluir actividades basadas en Scratch en diferentes \u00e1reas, materias y grupos de edad. \u00a1La imaginaci\u00f3n es el \u00fanico l\u00edmite!</p> <p></p> <p>Se programa mediante bloques y cuenta con una interfaz atractiva visualmente, permitiendo al alumnado comenzar a programar desde el primer momento. Se pueden crear historias interactivas, juegos, animaciones, m\u00fasica y producciones art\u00edsticas.</p> <p>Scratch se trabaja como aplicaci\u00f3n web, pero tambi\u00e9n est\u00e1 disponible en formato app  con el nombre de \u201cScratch Junior\u201d. Dicha app permite a los alumnos y alumnas introducirse en la programaci\u00f3n desde edades muy tempranas, pudiendo utilizarse desde los 5 a\u00f1os.</p>"},{"location":"index3.html#principales-caracteristicas-de-scratch","title":"Principales caracter\u00edsticas de Scratch","text":"<ol> <li> <p>Programaci\u00f3n basada en bloques: Los usuarios ensamblan bloques de colores que representan diferentes acciones, l\u00f3gicas o eventos. Estos bloques encajan como piezas de un rompecabezas, lo que facilita la comprensi\u00f3n de los conceptos de programaci\u00f3n.</p> </li> <li> <p>Entorno visual: Todo el proceso de creaci\u00f3n es altamente visual, lo que permite a los estudiantes ver inmediatamente c\u00f3mo sus instrucciones afectan a los personajes y objetos en la pantalla.</p> </li> <li> <p>Desarrollo de habilidades de pensamiento computacional: Scratch ayuda a los usuarios a descomponer problemas complejos en pasos m\u00e1s peque\u00f1os, establecer patrones, trabajar con abstracciones y automatizar procesos mediante algoritmos, todas ellas habilidades clave en el pensamiento computacional.</p> </li> <li> <p>Comunicaci\u00f3n y colaboraci\u00f3n: Scratch fomenta la participaci\u00f3n de una comunidad global de usuarios que comparten sus proyectos, comentan y colaboran en ideas.</p> </li> </ol> <p></p>"},{"location":"index3.html#ejemplos-de-uso-de-scratch-en-el-pensamiento-computacional","title":"Ejemplos de uso de Scratch en el pensamiento computacional:","text":"<ul> <li> <p>Animaci\u00f3n de personajes: Usar bucles y condicionales para mover personajes en la pantalla.</p> </li> <li> <p>Juegos interactivos: Crear interacciones con el teclado o el rat\u00f3n que desencadenen eventos como cambios de escena, puntuaciones, o sonidos.</p> </li> <li> <p>Historias interactivas: Contar historias en las que los personajes respondan a eventos y se muevan a trav\u00e9s de diferentes escenarios.</p> </li> </ul>"},{"location":"index3.html#scratch-en-diferentes-materias","title":"Scratch en diferentes materias","text":"<p>Scratch es una herramienta que no solo se limita a la ense\u00f1anza de programaci\u00f3n, sino que tambi\u00e9n puede ser utilizada para fortalecer habilidades creativas, colaborativas y de pensamiento cr\u00edtico en una amplia variedad de disciplinas. Algunos argumentos sobre c\u00f3mo Scratch puede beneficiar a diferentes \u00e1reas del conocimiento:</p> <ol> <li>Matem\u00e1ticas: Scratch permite a los estudiantes visualizar conceptos matem\u00e1ticos como coordenadas, geometr\u00eda y secuencias num\u00e9ricas de una manera interactiva y din\u00e1mica. Al crear simulaciones matem\u00e1ticas, los alumnos desarrollan habilidades para descomponer problemas en pasos l\u00f3gicos, algo fundamental en el aprendizaje matem\u00e1tico. Los bucles y variables en Scratch son \u00fatiles para ense\u00f1ar patrones num\u00e9ricos y secuencias.</li> <li>Ciencias: Los profesores pueden usar Scratch para que los alumnos creen modelos de fen\u00f3menos cient\u00edficos, como el ciclo del agua, la interacci\u00f3n de ecosistemas, o simulaciones de movimientos f\u00edsicos. Los alumnos pueden crear sus propios experimentos interactivos, lo que les permite visualizar de manera pr\u00e1ctica conceptos como la gravedad o la energ\u00eda cin\u00e9tica. Al trabajar en simulaciones, los alumnos deben razonar y tomar decisiones sobre c\u00f3mo modelar un fen\u00f3meno cient\u00edfico, lo que fomenta el pensamiento cr\u00edtico.</li> <li>Lengua y Literatura: Scratch permite a los alumnos crear historias interactivas, desarrollando habilidades narrativas y fomentando la creatividad. Los alumnos pueden crear personajes y desarrollar di\u00e1logos o situaciones que refuercen la comprensi\u00f3n de lecturas o temas literarios. Los alumnos pueden escribir guiones y ver c\u00f3mo sus personajes interact\u00faan con los escenarios que crean, promoviendo un enfoque divertido para desarrollar habilidades de escritura.</li> <li>Historia y Ciencias Sociales: Scratch puede ser usado para que los alumnos dise\u00f1en l\u00edneas de tiempo interactivas, permiti\u00e9ndoles explorar eventos hist\u00f3ricos de una manera din\u00e1mica y atractiva. Pueden recrear escenarios hist\u00f3ricos, desarrollando una comprensi\u00f3n m\u00e1s profunda de los eventos al interactuar con ellos. Trabajar en grupos para investigar y crear proyectos en Scratch fomenta la colaboraci\u00f3n y la investigaci\u00f3n en temas sociales o hist\u00f3ricos.</li> <li>Arte: Los alumnos pueden crear obras de arte animadas y experimentar con diferentes t\u00e9cnicas art\u00edsticas a trav\u00e9s de Scratch. Adem\u00e1s de la narrativa textual, pueden usar elementos visuales para expresar conceptos o historias, desarrollando tanto su creatividad como su pensamiento visual. Scratch combina sonido, im\u00e1genes y animaci\u00f3n, lo que lo convierte en una excelente plataforma para proyectos art\u00edsticos multimedia.</li> <li>M\u00fasica: Los alumnos pueden programar secuencias musicales, ajustando tiempos, repeticiones y notas, lo que les permite entender mejor la estructura musical.Pueden experimentar con diferentes ritmos y patrones musicales en tiempo real. Unir m\u00fasica con animaciones o historias en proyectos creativos que combinen varias \u00e1reas del conocimiento.</li> <li>Educaci\u00f3n F\u00edsica: Se pueden crear proyectos que simulen juegos y actividades f\u00edsicas, ayudando a los estudiantes a comprender conceptos de salud y bienestar. Los alumnos pueden programar herramientas para rastrear sus propios logros f\u00edsicos, como pasos o tiempos de carrera, mientras aprenden sobre h\u00e1bitos saludables.</li> </ol>"},{"location":"index3.html#ventajas-para-los-profesores-en-todas-las-materias","title":"Ventajas para los profesores en todas las materias","text":"<p>Fomenta la creatividad: Scratch permite a los alumnos desarrollar soluciones creativas a problemas complejos, lo que lo hace aplicable a cualquier \u00e1rea de estudio.</p> <p>Aprendizaje activo: Los alumnos no solo aprenden teor\u00eda, sino que tambi\u00e9n aplican lo que aprenden a trav\u00e9s de la creaci\u00f3n de proyectos.</p> <p>Colaboraci\u00f3n: La plataforma de Scratch fomenta el trabajo en equipo, ya que los alumnos pueden compartir y colaborar en proyectos, uniendo diferentes disciplinas en un mismo proyecto.</p> <p>Adaptable a cualquier nivel: Scratch es intuitivo y accesible, lo que lo convierte en una herramienta \u00fatil tanto para niveles b\u00e1sicos como avanzados.</p>"},{"location":"index4.html","title":"Funcionamiento de Scratch","text":"<p>Enlace a Scratch</p>"},{"location":"index4.html#primeros-pasos","title":"Primeros pasos","text":"<p>Los pasos \u200cpara empezar a usar Scratch son:</p> <ul> <li> <p>Crear una\u2064 cuenta en la p\u00e1gina web de Scratch.</p> </li> <li> <p>Descargar \u200bel programa Scratch.</p> </li> <li> <p>Iniciar \u200dsesi\u00f3n\u200b en Scratch y comenzar \u200ba \u200cexplorar el \u200bentorno de programaci\u00f3n.</p> </li> </ul> <p>Tutorial Scratch</p>"},{"location":"index4.html#bloques","title":"Bloques","text":"<p>Los bloques son los elementos mediante los que se programa en Scratch.Tienen forma de puzzle para encajar unos a continuaci\u00f3n de otros, o unos dentro de otros.</p> <p>Si un bloque no se puede poner en alg\u00fan lugar en concreto del proyecto, no te dejar\u00e1 hacerlo.</p> <p></p> <p>Se programa mediante bloques y cuenta con una interfaz atractiva visualmente, permitiendo al alumnado comenzar a programar desde el primer momento. Se pueden crear historias interactivas, juegos, animaciones, m\u00fasica y producciones art\u00edsticas.</p> <p>Scratch se trabaja como aplicaci\u00f3n web, pero tambi\u00e9n est\u00e1 disponible en formato app  con el nombre de \u201cScratch Junior\u201d. Dicha app permite a los alumnos y alumnas introducirse en la programaci\u00f3n desde edades muy tempranas, pudiendo utilizarse desde los 5 a\u00f1os.</p>"},{"location":"index4.html#interfaz","title":"Interfaz","text":"<p>Los objetos:Son los elementos visuales que aparecer\u00e1n en nuestro proyecto y sobre los que podremos actuar.</p> <p></p> <p>El escenario:Es la zona en la que los objetos trabajar\u00e1n movi\u00e9ndose, girando, etc.</p> <ul> <li> <p>El centro del escenario es la coordenada (0,0).</p> </li> <li> <p>La coordenada x var\u00eda de -240 a 240.</p> </li> <li> <p>La coordenada y var\u00eda desde -180 a 180.</p> </li> </ul> <p></p> <p>El fondo:Es la imagen o im\u00e1genes de fondo del escenario donde ir\u00e1n trabajando nuestros objetos.</p> <p>Todas las instrucciones:Son todas las posibles instrucciones que podremos usar en nuestro proyecto. Las instrucciones tambi\u00e9n se denominan bloques.</p> <p>Las instrucciones de mi proyecto:Son las instrucciones que habremos elegido para que se ejecuten dentro de nuestro proyecto. Las instrucciones de mi proyecto se consiguen arrastrando instrucciones de la zona \u201ctodas las instrucciones\u201d.</p> <p>Extensiones:Bot\u00f3n para a\u00f1adir extensiones al proyecto.</p>"},{"location":"index4.html#creacion-de-un-proyecto","title":"Creaci\u00f3n de un proyecto","text":"<ul> <li>Code o c\u00f3digo: Se crea el programa para el objeto que tengamos arrastrando los bloques a la zona de \"Instrucciones de mi proyecto\".</li> </ul> <ul> <li>Costumes o Disfraces: Se pueden modificar los disfraces o vistas del objeto.</li> </ul> <ul> <li>Sounds o Sonidos: permite modificar los sonidos asociados al objeto.</li> </ul>"},{"location":"index4.html#videos-de-ayuda","title":"V\u00eddeos de ayuda","text":"<p>Primeros pasos</p> <p>Crear objetos</p>"},{"location":"index4.html#ejemplo-sencillo-paso-a-paso","title":"Ejemplo sencillo paso a paso","text":"<p>Cuando inicias Scratch, por defecto te aparece un \u00fanico objeto que es el gato. Vamos a trabajas con \u00e9l.</p> <p>El objetivo es que el gato dibuje un cuadrado.</p> <ol> <li>Iniciar/detener el programa: los dos botones que est\u00e1n sobre el escenario :</li> </ol> <p></p> <p>Por lo tanto iniciamos buscando en el c\u00f3digo el siguiente bloque:</p> <p></p> <ol> <li>A\u00f1adir extensi\u00f3n: vamos a a\u00f1adir el l\u00e1piz en la barra de c\u00f3digo.</li> </ol> <p> </p> <p></p> <ol> <li>Movimiento:le damos movimiento al gato y giros para que dibuje el cuadrado.</li> </ol> <p></p> <ol> <li>Mejora del c\u00f3digo:</li> </ol> <p>Se repiten los mismos bloques cuatro veces y esta no ser\u00eda la forma \u00f3ptima para hacerlo. Existe un bloque en control que es el de repetir donde le puedo indicar el n\u00famero de veces que quiero repetir un bloque.</p> <p></p> <p>Otra forma de mejorar el c\u00f3digo, es que antes de que empiece a dibujar, borre lo que hay dibujado anteriormente.</p> <p></p>"},{"location":"index4.html#disfraces-y-escenarios","title":"Disfraces y escenarios","text":"<p>En la pesta\u00f1a de disfraces, por defecto nos aparece el gato. Podemos a\u00f1adir m\u00e1s disfraces desde el bot\u00f3n situado en la parte inferior.</p> <p></p> <p>y elegir otro disfraz diferente:</p> <p></p> <p>Tambi\u00e9n puedo crear mi propio disfraz:</p> <p></p> <p>Un ejemplo sencillo:</p> <p></p> <p>Tambi\u00e9n se puede cambiar el escenario:</p> <p></p> <p>Elegimos dos fondos diferentes y vemos que en el panel de la izquierda ahora nos aparece una solapa con los fondos que tenemos seleccionados:</p> <p></p> <p>Ahora complementamos el programa siguiente:</p> <p></p> <p>Condiciones</p> <p></p> <p>Ejecuci\u00f3n concurrente</p> <p>Se pueden realizar dos programas a la vez sobre el mismo objeto:</p> <p></p>"},{"location":"index5.html","title":"Proyectos con Scratch","text":""},{"location":"index5.html#los-organos-del-cuerpo","title":"Los \u00f3rganos del cuerpo","text":"<p>El proyecto muestra un esquema del cuerpo humano y junto a la imagen, encontramos siete \u00f3rganos que deben ser arrastrado a la posici\u00f3n correcta; cuando el \u00f3rgano queda ubicado en la posici\u00f3n correspondiente aparece un muy bien; adem\u00e1s podr\u00e1s obtener informaci\u00f3n importante sobre dicho \u00f3rgano que te permitir\u00e1 ampliar tus conocimientos. El alumno podr\u00e1 aprender de una forma f\u00e1cil d\u00f3nde se encuentran localizados los \u00f3rganos y qu\u00e9 funci\u00f3n tienen.</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"index5.html#contar-historias","title":"Contar historias","text":""},{"location":"index5.html#simulacion-del-corazon","title":"Simulaci\u00f3n del coraz\u00f3n","text":"<p>Si pulsas en el bot\u00f3n circulaci\u00f3n, se representa la simulaci\u00f3n de la circulaci\u00f3n del coraz\u00f3n y si pulsamos el de partes y pinchamos en cada circulo, aparece el nombre de cada una de las partes.</p> <p>enlace a simulaci\u00f3n</p>"}]}